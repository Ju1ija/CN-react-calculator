{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Button","props","id","idName","onClick","onClickEvent","icon","App","useState","input","setInput","currentInputField","inputHandler","e","className","type","onChange","event","target","value","placeholder","autocomplete","inputField","slice","deleteHandler","currentInput","result","Number","evaluate","toFixed","resultHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAoEA,IAAMA,EAAS,SAACC,GACd,OAAO,wBAAQC,GAAID,EAAME,OAAQC,QAASH,EAAMI,aAAzC,SAAwDJ,EAAMK,QAGxDC,EApEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAoBF,EAIlBG,EAAe,SAACC,GAGpBH,EADAC,GADqBE,IAmBvB,OACE,sBAAKC,UAAU,aAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,uBAAOC,KAAK,OAAOC,SA1BH,SAACC,GACrBP,EAASO,EAAMC,OAAOC,QAyB0BC,YAAY,IAAIC,aAAa,MAAMF,MAAOV,MAExF,sBAAKK,UAAU,kBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAQR,KAAK,IAAIH,OAAO,eAAeE,aAAc,kBAAMK,EAAS,OACpE,cAAC,EAAD,CAAQJ,KAAK,IAAID,aAAc,kBAAMO,EAAa,WAEpD,sBAAKE,UAAU,gBAAf,UACE,cAAC,EAAD,CAAQR,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,MAAMD,aAAc,kBAxBrB,SAACI,GACrB,GAAqB,kBAAVA,EAAoB,CAC7B,IAAIa,EAAab,EACjBa,EAAaA,EAAWC,MAAM,GAAI,GAClCb,EAASY,QAETZ,EAAS,IAkBoCc,CAAcf,MACrD,cAAC,EAAD,CAAQH,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,cAGtD,sBAAKE,UAAU,iBAAf,UACE,cAAC,EAAD,CAAQR,KAAK,IAAIH,OAAO,QAAQE,aAAc,kBA1ChC,SAACI,GACrB,IAAMgB,EAAehB,EACfiB,EAASC,OAAOC,YAASH,GAAcI,QAAQ,IACrDnB,EAASgB,GAuCiDI,CAAcrB,MAClE,cAAC,EAAD,CAAQH,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,QAClD,cAAC,EAAD,CAAQN,KAAK,IAAID,aAAc,kBAAMO,EAAa,kBCjD7CmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ea441b05.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { evaluate } from 'mathjs';\nimport './App.css';\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  let currentInputField = input;\n  const changeHandler = (event) => {\n    setInput(event.target.value);\n  }\n  const inputHandler = (e) => {\n    let currentElement = e;\n    currentInputField += currentElement;\n    setInput(currentInputField);\n  }\n  const resultHandler = (input) => {\n    const currentInput = input;\n    const result = Number(evaluate(currentInput).toFixed(3));\n    setInput(result);\n  }\n  const deleteHandler = (input) => {\n    if (typeof input === \"string\") {\n      let inputField = input;\n      inputField = inputField.slice(0, -1);\n      setInput(inputField);\n    } else {\n      setInput(\"\");\n    }\n  }\n\n  return (\n    <div className=\"calculator\">\n      <div className=\"input-section\">\n        <input type=\"text\" onChange={changeHandler} placeholder=\"0\" autocomplete=\"off\" value={input} />\n      </div>\n      <div className=\"buttons-section\">\n        <div className=\"numbers-section\">\n          <div className=\"grey-section\">\n            <Button icon=\"C\" idName=\"reset-button\" onClickEvent={() => setInput(\"\")} />\n            <Button icon=\"%\" onClickEvent={() => inputHandler(\"%\")} />\n          </div>\n          <div className=\"white-section\">\n            <Button icon=\"0\" onClickEvent={() => inputHandler(\"0\")} />\n            <Button icon=\".\" onClickEvent={() => inputHandler(\".\")} />\n            <Button icon=\"DEL\" onClickEvent={() => deleteHandler(input)} />\n            <Button icon=\"1\" onClickEvent={() => inputHandler(\"1\")} />\n            <Button icon=\"2\" onClickEvent={() => inputHandler(\"2\")} />\n            <Button icon=\"3\" onClickEvent={() => inputHandler(\"3\")} />\n            <Button icon=\"4\" onClickEvent={() => inputHandler(\"4\")} />\n            <Button icon=\"5\" onClickEvent={() => inputHandler(\"5\")} />\n            <Button icon=\"6\" onClickEvent={() => inputHandler(\"6\")} />\n            <Button icon=\"7\" onClickEvent={() => inputHandler(\"7\")} />\n            <Button icon=\"8\" onClickEvent={() => inputHandler(\"8\")} />\n            <Button icon=\"9\" onClickEvent={() => inputHandler(\"9\")} />\n          </div>\n        </div>\n        <div className=\"orange-section\">\n          <Button icon=\"=\" idName=\"equal\" onClickEvent={() => resultHandler(input)} />\n          <Button icon=\"+\" onClickEvent={() => inputHandler(\"+\")} />\n          <Button icon=\"-\" onClickEvent={() => inputHandler(\"-\")} />\n          <Button icon=\"x\" onClickEvent={() => inputHandler(\"*\")} />\n          <Button icon=\"/\" onClickEvent={() => inputHandler(\"/\")} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Button = (props) => {\n  return <button id={props.idName} onClick={props.onClickEvent}>{props.icon}</button>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}